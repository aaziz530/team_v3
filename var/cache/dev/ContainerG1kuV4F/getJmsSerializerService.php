<?php

namespace ContainerG1kuV4F;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getJmsSerializerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'jms_serializer' shared service.
     *
     * @return \JMS\Serializer\Serializer
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'SerializerInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ArrayTransformerInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Serializer.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'MetadataFactoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'AdvancedMetadataFactoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'TraceableMetadataFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'MetadataFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'DriverInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'LazyLoadingDriver.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'GraphNavigator'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'GraphNavigatorFactoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'GraphNavigator'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'DeserializationGraphNavigatorFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'HandlerRegistryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'TraceableHandlerRegistry.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'HandlerRegistry.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'LazyHandlerRegistry.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Construction'.\DIRECTORY_SEPARATOR.'ObjectConstructorInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Construction'.\DIRECTORY_SEPARATOR.'DoctrineObjectConstructor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Construction'.\DIRECTORY_SEPARATOR.'UnserializeObjectConstructor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Accessor'.\DIRECTORY_SEPARATOR.'AccessorStrategyInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Accessor'.\DIRECTORY_SEPARATOR.'DefaultAccessorStrategy.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventDispatcher'.\DIRECTORY_SEPARATOR.'EventDispatcherInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventDispatcher'.\DIRECTORY_SEPARATOR.'EventDispatcher.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventDispatcher'.\DIRECTORY_SEPARATOR.'LazyEventDispatcher.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'TraceableEventDispatcher.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'GraphNavigator'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'SerializationGraphNavigatorFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Visitor'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'SerializationVisitorFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Visitor'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'JsonSerializationVisitorFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Visitor'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'XmlSerializationVisitorFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Visitor'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'DeserializationVisitorFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Visitor'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'JsonDeserializationVisitorFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Visitor'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'XmlDeserializationVisitorFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Cache'.\DIRECTORY_SEPARATOR.'CacheInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Cache'.\DIRECTORY_SEPARATOR.'ClearableCacheInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Cache'.\DIRECTORY_SEPARATOR.'FileCache.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ContextFactory'.\DIRECTORY_SEPARATOR.'SerializationContextFactoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ContextFactory'.\DIRECTORY_SEPARATOR.'DeserializationContextFactoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle'.\DIRECTORY_SEPARATOR.'ContextFactory'.\DIRECTORY_SEPARATOR.'ConfiguredContextFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Type'.\DIRECTORY_SEPARATOR.'ParserInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Type'.\DIRECTORY_SEPARATOR.'Parser.php';

        $a = new \Metadata\MetadataFactory(new \Metadata\Driver\LazyLoadingDriver(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'metadata_driver' => ['privates', 'jms_serializer.metadata.typed_properties_driver', 'getJmsSerializer_Metadata_TypedPropertiesDriverService', true],
        ], [
            'metadata_driver' => '?',
        ]), 'metadata_driver'), 'Metadata\\ClassHierarchyMetadata', true);
        $a->setCache(($container->privates['jms_serializer.metadata.cache.file_cache'] ??= new \Metadata\Cache\FileCache(($container->targetDir.''.'/jms_serializer_default'))));
        $a->setIncludeInterfaces(false);

        $b = new \JMS\SerializerBundle\Debug\TraceableMetadataFactory($a);
        $c = new \JMS\SerializerBundle\Debug\TraceableHandlerRegistry(new \JMS\Serializer\Handler\LazyHandlerRegistry(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'jms_serializer.union_handler' => ['privates', 'jms_serializer.union_handler', 'getJmsSerializer_UnionHandlerService', true],
            'jms_serializer.array_collection_handler' => ['privates', 'jms_serializer.array_collection_handler', 'getJmsSerializer_ArrayCollectionHandlerService', true],
            'jms_serializer.datetime_handler' => ['privates', 'jms_serializer.datetime_handler', 'getJmsSerializer_DatetimeHandlerService', true],
            'jms_serializer.iterator_handler' => ['privates', 'jms_serializer.iterator_handler', 'getJmsSerializer_IteratorHandlerService', true],
            'jms_serializer.constraint_violation_handler' => ['privates', 'jms_serializer.constraint_violation_handler', 'getJmsSerializer_ConstraintViolationHandlerService', true],
            'fos_rest.serializer.form_error_handler' => ['privates', 'fos_rest.serializer.form_error_handler', 'getFosRest_Serializer_FormErrorHandlerService', true],
        ], [
            'jms_serializer.union_handler' => '?',
            'jms_serializer.array_collection_handler' => '?',
            'jms_serializer.datetime_handler' => '?',
            'jms_serializer.iterator_handler' => '?',
            'jms_serializer.constraint_violation_handler' => '?',
            'fos_rest.serializer.form_error_handler' => '?',
        ])));
        $c->registerHandler(2, 'union', 'json', ['jms_serializer.union_handler', 'deserializeUnion']);
        $c->registerHandler(2, 'union', 'xml', ['jms_serializer.union_handler', 'deserializeUnion']);
        $c->registerHandler(2, 'ArrayCollection', 'json', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $c->registerHandler(2, 'ArrayCollection', 'xml', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $c->registerHandler(2, 'Doctrine\\Common\\Collections\\ArrayCollection', 'json', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $c->registerHandler(2, 'Doctrine\\Common\\Collections\\ArrayCollection', 'xml', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $c->registerHandler(2, 'Doctrine\\ORM\\PersistentCollection', 'json', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $c->registerHandler(2, 'Doctrine\\ORM\\PersistentCollection', 'xml', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $c->registerHandler(2, 'Doctrine\\ODM\\MongoDB\\PersistentCollection', 'json', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $c->registerHandler(2, 'Doctrine\\ODM\\MongoDB\\PersistentCollection', 'xml', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $c->registerHandler(2, 'Doctrine\\ODM\\PHPCR\\PersistentCollection', 'json', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $c->registerHandler(2, 'Doctrine\\ODM\\PHPCR\\PersistentCollection', 'xml', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $c->registerHandler(2, 'DateTime', 'json', ['jms_serializer.datetime_handler', 'deserializeDateTimeFromjson']);
        $c->registerHandler(2, 'DateTime', 'xml', ['jms_serializer.datetime_handler', 'deserializeDateTimeFromxml']);
        $c->registerHandler(2, 'DateTimeImmutable', 'json', ['jms_serializer.datetime_handler', 'deserializeDateTimeImmutableFromjson']);
        $c->registerHandler(2, 'DateTimeImmutable', 'xml', ['jms_serializer.datetime_handler', 'deserializeDateTimeImmutableFromxml']);
        $c->registerHandler(2, 'DateInterval', 'json', ['jms_serializer.datetime_handler', 'deserializeDateIntervalFromjson']);
        $c->registerHandler(2, 'DateInterval', 'xml', ['jms_serializer.datetime_handler', 'deserializeDateIntervalFromxml']);
        $c->registerHandler(2, 'DateTimeInterface', 'json', ['jms_serializer.datetime_handler', 'deserializeDateTimeFromJson']);
        $c->registerHandler(2, 'DateTimeInterface', 'xml', ['jms_serializer.datetime_handler', 'deserializeDateTimeFromXml']);
        $c->registerHandler(2, 'Iterator', 'json', ['jms_serializer.iterator_handler', 'deserializeIterator']);
        $c->registerHandler(2, 'Iterator', 'xml', ['jms_serializer.iterator_handler', 'deserializeIterator']);
        $c->registerHandler(2, 'ArrayIterator', 'json', ['jms_serializer.iterator_handler', 'deserializeIterator']);
        $c->registerHandler(2, 'ArrayIterator', 'xml', ['jms_serializer.iterator_handler', 'deserializeIterator']);
        $c->registerHandler(2, 'Generator', 'json', ['jms_serializer.iterator_handler', 'deserializeGenerator']);
        $c->registerHandler(2, 'Generator', 'xml', ['jms_serializer.iterator_handler', 'deserializeGenerator']);
        $c->registerHandler(1, 'union', 'json', ['jms_serializer.union_handler', 'serializeUnion']);
        $c->registerHandler(1, 'union', 'xml', ['jms_serializer.union_handler', 'serializeUnion']);
        $c->registerHandler(1, 'ArrayCollection', 'json', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $c->registerHandler(1, 'ArrayCollection', 'xml', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $c->registerHandler(1, 'Doctrine\\Common\\Collections\\ArrayCollection', 'json', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $c->registerHandler(1, 'Doctrine\\Common\\Collections\\ArrayCollection', 'xml', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $c->registerHandler(1, 'Doctrine\\ORM\\PersistentCollection', 'json', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $c->registerHandler(1, 'Doctrine\\ORM\\PersistentCollection', 'xml', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $c->registerHandler(1, 'Doctrine\\ODM\\MongoDB\\PersistentCollection', 'json', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $c->registerHandler(1, 'Doctrine\\ODM\\MongoDB\\PersistentCollection', 'xml', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $c->registerHandler(1, 'Doctrine\\ODM\\PHPCR\\PersistentCollection', 'json', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $c->registerHandler(1, 'Doctrine\\ODM\\PHPCR\\PersistentCollection', 'xml', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $c->registerHandler(1, 'Symfony\\Component\\Validator\\ConstraintViolationList', 'xml', ['jms_serializer.constraint_violation_handler', 'serializeListToxml']);
        $c->registerHandler(1, 'Symfony\\Component\\Validator\\ConstraintViolationList', 'json', ['jms_serializer.constraint_violation_handler', 'serializeListTojson']);
        $c->registerHandler(1, 'Symfony\\Component\\Validator\\ConstraintViolation', 'xml', ['jms_serializer.constraint_violation_handler', 'serializeViolationToxml']);
        $c->registerHandler(1, 'Symfony\\Component\\Validator\\ConstraintViolation', 'json', ['jms_serializer.constraint_violation_handler', 'serializeViolationTojson']);
        $c->registerHandler(1, 'DateTime', 'json', ['jms_serializer.datetime_handler', 'serializeDateTime']);
        $c->registerHandler(1, 'DateTime', 'xml', ['jms_serializer.datetime_handler', 'serializeDateTime']);
        $c->registerHandler(1, 'DateTimeImmutable', 'json', ['jms_serializer.datetime_handler', 'serializeDateTimeImmutable']);
        $c->registerHandler(1, 'DateTimeImmutable', 'xml', ['jms_serializer.datetime_handler', 'serializeDateTimeImmutable']);
        $c->registerHandler(1, 'DateInterval', 'json', ['jms_serializer.datetime_handler', 'serializeDateInterval']);
        $c->registerHandler(1, 'DateInterval', 'xml', ['jms_serializer.datetime_handler', 'serializeDateInterval']);
        $c->registerHandler(1, 'DateTimeInterface', 'json', ['jms_serializer.datetime_handler', 'serializeDateTimeInterface']);
        $c->registerHandler(1, 'DateTimeInterface', 'xml', ['jms_serializer.datetime_handler', 'serializeDateTimeInterface']);
        $c->registerHandler(1, 'Iterator', 'json', ['jms_serializer.iterator_handler', 'serializeIterable']);
        $c->registerHandler(1, 'Iterator', 'xml', ['jms_serializer.iterator_handler', 'serializeIterable']);
        $c->registerHandler(1, 'ArrayIterator', 'json', ['jms_serializer.iterator_handler', 'serializeIterable']);
        $c->registerHandler(1, 'ArrayIterator', 'xml', ['jms_serializer.iterator_handler', 'serializeIterable']);
        $c->registerHandler(1, 'Generator', 'json', ['jms_serializer.iterator_handler', 'serializeIterable']);
        $c->registerHandler(1, 'Generator', 'xml', ['jms_serializer.iterator_handler', 'serializeIterable']);
        $c->registerHandler(1, 'Symfony\\Component\\Form\\Form', 'xml', ['fos_rest.serializer.form_error_handler', 'serializeFormToxml']);
        $c->registerHandler(1, 'Symfony\\Component\\Form\\Form', 'json', ['fos_rest.serializer.form_error_handler', 'serializeFormTojson']);
        $c->registerHandler(1, 'Symfony\\Component\\Form\\FormInterface', 'xml', ['fos_rest.serializer.form_error_handler', 'serializeFormToXml']);
        $c->registerHandler(1, 'Symfony\\Component\\Form\\FormInterface', 'json', ['fos_rest.serializer.form_error_handler', 'serializeFormToJson']);
        $c->registerHandler(1, 'Symfony\\Component\\Form\\FormError', 'xml', ['fos_rest.serializer.form_error_handler', 'serializeFormErrorToxml']);
        $c->registerHandler(1, 'Symfony\\Component\\Form\\FormError', 'json', ['fos_rest.serializer.form_error_handler', 'serializeFormErrorTojson']);
        $d = new \JMS\Serializer\Accessor\DefaultAccessorStrategy(NULL);
        $e = new \JMS\SerializerBundle\Debug\TraceableEventDispatcher(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'jms_serializer.stopwatch_subscriber' => ['privates', 'jms_serializer.stopwatch_subscriber', 'getJmsSerializer_StopwatchSubscriberService', true],
            'jms_serializer.traceable_runs_listener' => ['privates', 'jms_serializer.traceable_runs_listener', 'getJmsSerializer_TraceableRunsListenerService', true],
            'jms_serializer.doctrine_proxy_subscriber' => ['privates', 'jms_serializer.doctrine_proxy_subscriber', 'getJmsSerializer_DoctrineProxySubscriberService', true],
        ], [
            'jms_serializer.stopwatch_subscriber' => '?',
            'jms_serializer.traceable_runs_listener' => '?',
            'jms_serializer.doctrine_proxy_subscriber' => '?',
        ]));
        $e->addListener('serializer.pre_serialize', ['jms_serializer.stopwatch_subscriber', 'onPreSerialize'], NULL, NULL, NULL);
        $e->addListener('serializer.pre_serialize', ['jms_serializer.traceable_runs_listener', 'saveRunInfo'], NULL, NULL, NULL);
        $e->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerializeTypedProxy'], NULL, NULL, 'Doctrine\\Persistence\\Proxy');
        $e->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerializeTypedProxy'], NULL, NULL, 'Doctrine\\Common\\Persistence\\Proxy');
        $e->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerialize'], NULL, NULL, 'Doctrine\\ORM\\PersistentCollection');
        $e->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerialize'], NULL, NULL, 'Doctrine\\ODM\\MongoDB\\PersistentCollection');
        $e->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerialize'], NULL, NULL, 'Doctrine\\ODM\\PHPCR\\PersistentCollection');
        $e->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerialize'], NULL, NULL, 'Doctrine\\Persistence\\Proxy');
        $e->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerialize'], NULL, NULL, 'Doctrine\\Common\\Persistence\\Proxy');
        $e->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerialize'], NULL, NULL, 'ProxyManager\\Proxy\\LazyLoadingInterface');
        $e->addListener('serializer.pre_deserialize', ['jms_serializer.traceable_runs_listener', 'saveRunInfo'], NULL, NULL, NULL);
        $e->addListener('serializer.post_serialize', ['jms_serializer.stopwatch_subscriber', 'onPostSerialize'], NULL, NULL, NULL);
        $f = new \JMS\Serializer\Visitor\Factory\JsonSerializationVisitorFactory();
        $f->setOptions(1216);
        $g = new \JMS\Serializer\Visitor\Factory\XmlSerializationVisitorFactory();
        $g->setFormatOutput(true);
        $h = new \JMS\Serializer\Visitor\Factory\JsonDeserializationVisitorFactory(false);
        $h->setOptions(0);

        return $container->services['jms_serializer'] = new \JMS\Serializer\Serializer($b, [2 => new \JMS\Serializer\GraphNavigator\Factory\DeserializationGraphNavigatorFactory($b, $c, new \JMS\Serializer\Construction\DoctrineObjectConstructor(($container->services['doctrine'] ?? $container->load('getDoctrineService')), new \JMS\Serializer\Construction\UnserializeObjectConstructor(), 'null'), $d, $e, NULL), 1 => new \JMS\Serializer\GraphNavigator\Factory\SerializationGraphNavigatorFactory($b, $c, $d, $e, NULL)], ['json' => $f, 'xml' => $g], ['json' => $h, 'xml' => new \JMS\Serializer\Visitor\Factory\XmlDeserializationVisitorFactory()], ($container->services['jms_serializer.serialization_context_factory'] ??= new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory()), ($container->services['jms_serializer.deserialization_context_factory'] ??= new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory()), ($container->privates['jms_serializer.type_parser'] ??= new \JMS\Serializer\Type\Parser()));
    }
}
